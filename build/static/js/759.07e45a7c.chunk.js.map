{"version":3,"file":"static/js/759.07e45a7c.chunk.js","mappings":"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","sources":["supas/supabaseRate.js","components/Star.js","components/RatingStars.js","components/MoviePosterCarousel.js","pages/movie.js","supas/fetchGlobalRatings.js","supas/supabaseFavorite.js"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst SUPABASE_KEY =\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt6eWxud3Fib2FiZnhpZmpzZXZpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTY3NDYzNjI0MiwiZXhwIjoxOTkwMjEyMjQyfQ.9YzPtaUZzqkGKve6PI5MtH_otfv1jh521NugK9dqyis\";\r\nconst supabaseUrl = \"https://kzylnwqboabfxifjsevi.supabase.co\";\r\n\r\nexport async function supabaseRate(user, id, index) {\r\n    const supabase = createClient(supabaseUrl, SUPABASE_KEY);\r\n    if (!index || !user || !id) {\r\n        return \"user and index must be valid for RATING...!!!\";\r\n    }\r\n    const { data, error } = await supabase\r\n        .from(\"Favorite movies\")\r\n        .update({ rating: index })\r\n        .eq(\"user_id\", user)\r\n        .eq(\"movie_id\", id);\r\n\r\n    if (!error) {\r\n        console.log(data);\r\n        return true\r\n    } else {\r\n        console.log(\r\n            error.message,\r\n            \"Unable to rate this. who the fuck are you.\"\r\n        );\r\n        return false;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { supabaseRate } from \"../supas/supabaseRate\";\r\nimport fetchGlobalRatings from \"../supas/fetchGlobalRatings\";\r\nconst Star = (props) => {\r\n    const changeGrade = async (e) => {\r\n        if (!props.userId) {\r\n            console.log(props.userId, \"user wasnt logged in!@@@\");\r\n            props.setMustLoginModal(true);\r\n        } else {\r\n            props.changeGrade(e.target.value);\r\n            const s = await supabaseRate(\r\n                props.userId,\r\n                props.id,\r\n                parseInt(e.target.value)\r\n            );\r\n            console.log(fetchGlobalRatings, s);\r\n            const r = fetchGlobalRatings(props.userId);\r\n\r\n            console.log(e.target.value, s, \"STAR\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <label className=\"star\">\r\n            <input\r\n                onClick={changeGrade}\r\n                type=\"radio\"\r\n                name=\"rating\"\r\n                id={props.grade}\r\n                value={props.index}\r\n                className=\"stars_radio-input\"\r\n            />\r\n            <svg\r\n                width=\"30\"\r\n                height=\"30\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"#fce500\"\r\n                strokeWidth=\"1\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                style={props.style}\r\n            >\r\n                <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon>\r\n            </svg>\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Star;\r\n","import React from \"react\";\r\nimport Star from \"./Star\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction RatingStars(props) {\r\n    const GRADES = [\"Poor\", \"Fair\", \"Good\", \"Very good\", \"Excellent\"];\r\n    const [gradeIndex, setGradeIndex] = useState();\r\n    const changeGradeIndex = (index) => {\r\n        setGradeIndex(index);\r\n    };\r\n    const activeStar = {\r\n        fill: \"#fce500\",\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (props.rating) {\r\n            console.log(\"set gradeindex now\");\r\n            setGradeIndex(props.rating);\r\n        }\r\n    }, [props.rating]);\r\n    useEffect(() => {\r\n        console.log(gradeIndex);\r\n    }, [gradeIndex]);\r\n    return (\r\n        <div className=\"stars\">\r\n            {GRADES.map((grade, index) => (\r\n                <Star\r\n                    // fetchGlobalRatings={props.fetchGlobalRatings}\r\n                    index={index}\r\n                    key={grade}\r\n                    style={gradeIndex >= index ? activeStar : {}}\r\n                    changeGrade={changeGradeIndex}\r\n                    userId={props.userId}\r\n                    id={props.id}\r\n                    saved={props.saved}\r\n                    setMustLoginModal={props.setMustLoginModal}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nexport default RatingStars;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction MoviePosterCarousel({\r\n    posterUrls,\r\n    saveMovie,\r\n    unsaveMovie,\r\n    // nextPoster,\r\n    // posterCounter,\r\n}) {\r\n    const [currentPoster, setCurrentPoster] = useState(1);\r\n    const nextPoster = (x) => {\r\n        if (currentPoster + x > posterUrls.length) {\r\n            setCurrentPoster(1);\r\n        } else if (currentPoster + x <= 0) {\r\n            setCurrentPoster(posterUrls.length);\r\n        } else {\r\n            setCurrentPoster(currentPoster + x);\r\n        }\r\n    };\r\n    return (\r\n        <div\r\n            id=\"carouselExampleCrossfade\"\r\n            className=\"carousel\"\r\n            // data-mdb-ride=\"carousel\"\r\n            // data-mdb-interval=\"10000\"\r\n        >\r\n            <div id=\"unsaved\" onClick={() => saveMovie()} key=\"unsaved\"></div>\r\n            <div id=\"saved\" onClick={() => unsaveMovie()} key=\"saved\"></div>\r\n            {/* {posterUrls.map((x, i) => {\r\n                var g = i > 0 ? \"\" : \"active\";\r\n                return (\r\n                    <div className={`carousel-item ${g}`} key={`div${i}`}>\r\n                        <img\r\n                            key={i}\r\n                            src={`${x}`}\r\n                            className=\"d-block w-100 h-100 hover-shadow\"\r\n                            alt={`${i}`}\r\n                        />\r\n                    </div>\r\n                );\r\n            })} */}\r\n            <div className={`carousel-item active`}>\r\n                <img\r\n                    src={posterUrls[currentPoster - 1]}\r\n                    className=\"d-block w-100 h-100 hover-shadow\"\r\n                    alt={currentPoster}\r\n                />\r\n            </div>\r\n            <div id=\"posterCounter\">\r\n                <h1>\r\n                    {currentPoster}/{posterUrls.length}\r\n                </h1>\r\n\r\n                <div className=\"w-2/4 flex justify-between\">\r\n                    <Link id=\"movieToFavorites\" to={\"/favorites\"}>\r\n                        Watchlist\r\n                    </Link>\r\n                    <Link id=\"movieToHome\" to={\"/\"}>\r\n                        Go back to home\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <button\r\n                className=\"carousel-control-prev\"\r\n                type=\"button\"\r\n                onClick={() => nextPoster(-1)}\r\n            >\r\n                {/* <span\r\n                    className=\"carousel-control-prev-icon\"\r\n                    aria-hidden=\"true\"\r\n                ></span> */}\r\n                {/* <span className=\"visually-hidden\">Previous</span> */}\r\n            </button>\r\n            <button\r\n                className=\"carousel-control-next\"\r\n                type=\"button\"\r\n                onClick={() => nextPoster(1)}\r\n            >\r\n                <span\r\n                    className=\"carousel-control-next-icon\"\r\n                    aria-hidden=\"true\"\r\n                ></span>\r\n                <span className=\"visually-hidden\">Next</span>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviePosterCarousel;\r\n","import axios from \"axios\";\r\nimport { React, useState, useEffect, lazy } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport * as mdb from \"mdb-ui-kit\"; // mdbootstrap lib, need it for the carousel to work\r\nimport RatingStars from \"../components/RatingStars\";\r\nimport MoviePosterCarousel from \"../components/MoviePosterCarousel\";\r\nimport { SupabaseSaveMovie } from \"../supas/supabaseSaveMovie\";\r\n// import { SupabaseUnsaveMovie } from \"../supas/supabaseUnsaveMovie\";\r\nimport { SupabaseFavorite } from \"../supas/supabaseFavorite\";\r\nimport fetchGlobalRatings from \"../supas/fetchGlobalRatings\";\r\n// const SupabaseFavorite = lazy(() => import(\"../supas/supabaseFavorite\"));\r\n// const SupabaseSaveMovie = lazy(() => import(\"../supas/supabaseSaveMovie\"));\r\n// const SupabaseUnsaveMovie = lazy(() => import(\"../supas/supabaseUnsaveMovie\"));\r\n\r\nfunction Movie() {\r\n    const location = useLocation();\r\n    const [id, setID] = useState(location.state.id);\r\n\r\n    useEffect(() => {\r\n        if (!/^tt[0-9]{6,9}$/gi.test(location.state.id)) {\r\n            console.log(\"id not goood\", id);\r\n            async function regexx(s) {\r\n                await axios\r\n                    .get(\r\n                        `https://api.themoviedb.org/3/movie/${s}?api_key=c4aa72a3b011582e85cbcc03fe277717&language=en-US`\r\n                    )\r\n                    .then((response) => {\r\n                        let thisID = response.data[\"imdb_id\"];\r\n                        setID(thisID);\r\n                        console.log(thisID);\r\n                        fetch(thisID);\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err, \"its for regexx\");\r\n                    });\r\n            }\r\n            regexx(location.state.id);\r\n        } else {\r\n            fetch(id);\r\n        }\r\n    }, []);\r\n\r\n    const userID = localStorage.getItem(\"userId\");\r\n    const [posterUrls, setPosterUrls] = useState([]);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [released, setReleased] = useState(\"\");\r\n    const [rating, setRating] = useState(\"\");\r\n    const [genres, setGenres] = useState(\"\");\r\n    const [plot, setPlot] = useState(\"\");\r\n    const [time, setTime] = useState();\r\n    const [imdb, setImdb] = useState();\r\n    const [actors, setActors] = useState(\"\");\r\n    const [directors, setDirectors] = useState(\"\");\r\n    const [writers, setWriters] = useState(\"\");\r\n    const [awards, setAwards] = useState(\"\");\r\n    const [boxOffice, setBoxOffice] = useState(0);\r\n    // const [casts, setCasts] = useState([]);\r\n\r\n    // const [posterCounter, setPosterCounter] = useState(1);\r\n\r\n    const [myRating, setMyRating] = useState(0);\r\n    const [saved, setSaved] = useState(false);\r\n\r\n    // useEffect(() => {\r\n    //     fetch();\r\n    //     console.log(\"used effecto\");\r\n    // }, [id]);\r\n\r\n    // const options = {\r\n    //     method: \"GET\",\r\n    //     url: \"https://movie-database-alternative.p.rapidapi.com/\",\r\n    //     params: { r: \"json\", i: id },\r\n    //     headers: {\r\n    //         \"X-RapidAPI-Key\":\r\n    //             \"676d565cf9msh03913601fbc68d3p181769jsnc91829350ae4\",\r\n    //         \"X-RapidAPI-Host\": \"movie-database-alternative.p.rapidapi.com\",\r\n    //     },\r\n    // };\r\n    var uselessDatas = [\r\n        \"Year\",\r\n        \"Language\",\r\n        \"Country\",\r\n        \"Ratings\",\r\n        \"Metascore\",\r\n        \"imdbVotes\",\r\n        \"imdbID\",\r\n        \"Type\",\r\n        \"Production\",\r\n        \"Website\",\r\n        \"Response\",\r\n        \"DVD\",\r\n    ];\r\n\r\n    const fetch = async (newId) => {\r\n        const options = {\r\n            method: \"GET\",\r\n            url: \"https://movie-database-alternative.p.rapidapi.com/\",\r\n            params: { r: \"json\", i: newId },\r\n            headers: {\r\n                \"X-RapidAPI-Key\":\r\n                    \"676d565cf9msh03913601fbc68d3p181769jsnc91829350ae4\",\r\n                \"X-RapidAPI-Host\": \"movie-database-alternative.p.rapidapi.com\",\r\n            },\r\n        };\r\n        await axios\r\n            .request(options)\r\n            .then(function (response) {\r\n                let newDetails = [];\r\n\r\n                console.log(\r\n                    response.data,\r\n                    newId,\r\n                    \"movie details were fetched...\"\r\n                );\r\n                if (!response.data) {\r\n                    console.warn(\"no movie found -> \", response.data);\r\n                }\r\n                // for (const key in response.data) {\r\n                //     if (uselessDatas.includes(key)) {\r\n                //         delete response.data[key];\r\n                //     }\r\n                // }\r\n                newDetails = response.data;\r\n                setPosterUrls([newDetails.Poster]);\r\n                setTitle(newDetails.Title);\r\n                setReleased(newDetails.Released);\r\n                setRating(newDetails.Rated);\r\n                setGenres(newDetails.Genre);\r\n                setPlot(newDetails.Plot);\r\n                setTime(newDetails.Runtime);\r\n                setImdb(newDetails.imdbRating);\r\n\r\n                setActors(newDetails.Actors);\r\n                setAwards(newDetails.Awards);\r\n                setDirectors(newDetails.Director);\r\n                setWriters(newDetails.Writer);\r\n\r\n                setBoxOffice(newDetails.BoxOffice);\r\n\r\n                // var newCasts = [];\r\n                // newCasts = newCasts.concat(newDetails.Director.split(\",\"));\r\n                // newCasts = newCasts.concat(newDetails.Writer.split(\",\"));\r\n                // newCasts = newCasts.concat(newDetails.Actors.split(\",\"));\r\n                // var r = [];\r\n                // newCasts.forEach((x) => {\r\n                //     r.push(x.trim());\r\n                // });\r\n                // setCasts(r);\r\n            })\r\n            .catch(function (error) {\r\n                console.error(error, id);\r\n            });\r\n\r\n        await axios\r\n            .get(\r\n                `https://api.themoviedb.org/3/movie/${id}/images?api_key=c4aa72a3b011582e85cbcc03fe277717&language=en-US&include_image_language=en`\r\n            )\r\n            .then(function (response) {\r\n                setPosterUrls([]);\r\n                console.log(response.data.posters);\r\n                let posters = response.data.posters;\r\n                let newPosterUrls = [];\r\n                for (let i = 0; i < posters.length; i++) {\r\n                    let j = posters[i].file_path;\r\n                    newPosterUrls.push(\r\n                        `https://image.tmdb.org/t/p/original${j}`\r\n                    );\r\n                }\r\n                setPosterUrls(newPosterUrls);\r\n            })\r\n            .catch(function (err) {\r\n                console.log(\"problem with poster\", err);\r\n            });\r\n        isSaved(newId);\r\n    };\r\n\r\n    // const nextPoster = (x) => {\r\n    //     if (posterCounter + x > posterUrls.length) {\r\n    //         setPosterCounter(1);\r\n    //     } else if (posterCounter + x <= 0) {\r\n    //         setPosterCounter(posterUrls.length);\r\n    //     } else {\r\n    //         setPosterCounter(posterCounter + x);\r\n    //     }\r\n    // };\r\n\r\n    // const fetchGlobalRatings = async (id) => {\r\n    //     const ratings = await SupabaseFavorite(id);\r\n    //     if (ratings) {\r\n    //         localStorage.setItem(\"ratings\", JSON.stringify(ratings));\r\n    //     }\r\n    // };\r\n    const isSaved = async (id) => {\r\n        // const saveds = await SupabaseFavorite(userID);\r\n        const saveds = JSON.parse(localStorage.getItem(\"ratings\"));\r\n        const saved = document.querySelector(\"#saved\");\r\n        const unsaved = document.querySelector(\"#unsaved\");\r\n        Object.keys(saveds).forEach((x) => {\r\n            if (x === id) {\r\n                console.log(saveds, id, \"this movie is saved\");\r\n                localStorage.setItem(id, true);\r\n                unsaved.style.display = \"none\";\r\n                saved.style.display = \"block\";\r\n                if (saveds[x]) {\r\n                    setMyRating(saveds[x]);\r\n                    setSaved(true);\r\n                    console.log(saveds[x], \"saveds[x]\");\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const saveMovie = async () => {\r\n        if (!userID) {\r\n            alert(\"You must login to use this feature...\");\r\n            return false;\r\n        }\r\n        console.log(\"saved this movie\", id, \"user\", userID);\r\n        const saved = document.querySelector(\"#saved\");\r\n        const unsaved = document.querySelector(\"#unsaved\");\r\n\r\n        localStorage.setItem(id, true);\r\n        import(\"../supas/supabaseSaveMovie\").then(async (module) => {\r\n            const savedThis = await module.SupabaseSaveMovie(userID, id);\r\n            if (savedThis) {\r\n                localStorage.setItem(id, true);\r\n                unsaved.style.display = \"none\";\r\n                saved.style.display = \"block\";\r\n                let r = await fetchGlobalRatings(userID);\r\n            } else {\r\n                alert(`${id} this movie was already saved...!`);\r\n            }\r\n        });\r\n    };\r\n    const unsaveMovie = async () => {\r\n        import(\"../supas/supabaseUnsaveMovie\").then(async (module) => {\r\n            const ss = await module.SupabaseUnsaveMovie(userID, id);\r\n            if (ss) {\r\n                localStorage.setItem(id, false);\r\n                const saved = document.querySelector(\"#saved\");\r\n                const unsaved = document.querySelector(\"#unsaved\");\r\n                unsaved.style.display = \"block\";\r\n                saved.style.display = \"none\";\r\n                let r = await fetchGlobalRatings(userID);\r\n            }\r\n            console.log(ss);\r\n        });\r\n    };\r\n    return (\r\n        <div id=\"movieCont\">\r\n            <div id=\"moviePoster\">\r\n                <MoviePosterCarousel\r\n                    posterUrls={posterUrls}\r\n                    saveMovie={saveMovie}\r\n                    unsaveMovie={unsaveMovie}\r\n                    // posterCounter={posterCounter}\r\n                    // nextPoster={nextPoster}\r\n                ></MoviePosterCarousel>\r\n            </div>\r\n            <div id=\"movieDetails\">\r\n                <div id=\"movieDetail\">\r\n                    <div id=\"movieTitles\">\r\n                        <a\r\n                            href={`https://www.imdb.com/title/${id}`}\r\n                            target=\"_\"\r\n                            id=\"movieImdb\"\r\n                        >\r\n                            {imdb}\r\n                        </a>\r\n                        <div id=\"movieTitle\">\r\n                            {title}\r\n                            <div id=\"movieRating\">\r\n                                <h1>{rating}</h1> |<h1>{time}</h1> |\r\n                                <h1>{released}</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"movieDetailes\">\r\n                        <div className=\"movieFlexDiv plot\">{plot}</div>\r\n\r\n                        <div className=\"movieFlexDiv\">\r\n                            <h1>\r\n                                Directed by: <span>{directors}</span>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"movieFlexDiv\">\r\n                            <h1>\r\n                                Written by: <span>{writers}</span>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"movieFlexDiv\">\r\n                            <h1>\r\n                                Rated: <span>{rating}</span>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"movieFlexDiv\">\r\n                            <h1>\r\n                                Running time: <span>{time}</span>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"movieFlexDiv\">\r\n                            <h1>\r\n                                Release date: <span>{released}</span>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"movieFlexDiv\">\r\n                            <h1>\r\n                                Gross Box Office: <span>{boxOffice}</span>\r\n                            </h1>\r\n                        </div>\r\n\r\n                        <div className=\"movieFlexDiv\">\r\n                            <h1>\r\n                                Awards and Nominations: <span>{awards}</span>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"movieFlexDiv\">\r\n                            <h1>\r\n                                Genre: <span>{genres}</span>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"movieFlexDiv\">\r\n                            <h1>\r\n                                Actors: <span>{actors}</span>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"flex h-1/6 items-center w-full px-2\" id=\"movieRatingStars\">\r\n                            <h1>Rate this movie : </h1>\r\n                            <RatingStars\r\n                                // fetchGlobalRatings={fetchGlobalRatings}\r\n                                userId={userID}\r\n                                saved={saved}\r\n                                id={id}\r\n                                rating={myRating}\r\n                            ></RatingStars>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"links\">\r\n                        <a\r\n                            id=\"trailer\"\r\n                            href={`https://www.youtube.com/results?search_query=${title}`}\r\n                            target=\"_\"\r\n                        >\r\n                            <h1>Watch trailer</h1>\r\n                        </a>\r\n                        <a\r\n                            id=\"watchLink\"\r\n                            href={`https://www1.123movies.co/search/?s=${\r\n                                title ? title.replace(\" \", \"+\") : \"\"\r\n                            }`}\r\n                            target=\"_\"\r\n                        >\r\n                            <h1>Watch here</h1>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Movie;\r\n","import { SupabaseFavorite } from \"./supabaseFavorite\";\r\n\r\nexport default async function fetchGlobalRatings(id) {\r\n    const ratings = await SupabaseFavorite(id);\r\n    if (ratings) {\r\n        localStorage.setItem(\"ratings\", JSON.stringify(ratings));\r\n    }\r\n}\r\n","import { createClient } from \"@supabase/supabase-js\";\r\n// const SUPABASE_KEY =\r\n//     \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt6eWxud3Fib2FiZnhpZmpzZXZpIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NzQ2MzYyNDIsImV4cCI6MTk5MDIxMjI0Mn0.wq8gqnIkU8ghAZcqxxHclJouLZDAGUPpVkei95W_1Hc\";\r\n//admin key\r\nconst SUPABASE_KEY =\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt6eWxud3Fib2FiZnhpZmpzZXZpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTY3NDYzNjI0MiwiZXhwIjoxOTkwMjEyMjQyfQ.9YzPtaUZzqkGKve6PI5MtH_otfv1jh521NugK9dqyis\";\r\nconst supabaseUrl = \"https://kzylnwqboabfxifjsevi.supabase.co\";\r\n// const supabaseKey = process.env.SUPABASE_KEY;\r\n\r\nexport async function SupabaseFavorite(id) {\r\n    const supabase = createClient(supabaseUrl, SUPABASE_KEY);\r\n    if (!id) {\r\n        return false;\r\n    }\r\n    let { data: favorites, error } = await supabase\r\n        .from(\"Favorite movies\")\r\n        .select(\"movie_id,rating\")\r\n        .eq(\"user_id\", id);\r\n    if (!error) {\r\n        if (favorites.length === 0) {\r\n            return false;\r\n        } else {\r\n            var res = {};\r\n            favorites.map((x) => {\r\n                res[x[\"movie_id\"]] = x[\"rating\"];\r\n            });\r\n            console.log(res);\r\n            return res;\r\n        }\r\n    } else {\r\n        console.log(error, \"cant get user favorites\");\r\n        return false;\r\n    }\r\n}\r\n"],"names":["SUPABASE_KEY","supabaseUrl","supabaseRate","user","id","index","supabase","createClient","from","update","rating","eq","data","error","console","log","message","props","changeGrade","e","userId","setMustLoginModal","target","value","parseInt","s","fetchGlobalRatings","className","onClick","type","name","grade","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","style","points","useState","gradeIndex","setGradeIndex","changeGradeIndex","activeStar","useEffect","map","saved","posterUrls","saveMovie","unsaveMovie","currentPoster","setCurrentPoster","nextPoster","x","length","src","alt","to","location","useLocation","state","setID","test","fetch","regexx","axios","then","response","thisID","catch","err","userID","localStorage","getItem","setPosterUrls","title","setTitle","released","setReleased","setRating","genres","setGenres","plot","setPlot","time","setTime","imdb","setImdb","actors","setActors","directors","setDirectors","writers","setWriters","awards","setAwards","boxOffice","setBoxOffice","myRating","setMyRating","setSaved","newId","options","method","url","params","r","i","headers","newDetails","warn","Poster","Title","Released","Rated","Genre","Plot","Runtime","imdbRating","Actors","Awards","Director","Writer","BoxOffice","posters","newPosterUrls","j","file_path","push","isSaved","saveds","JSON","parse","document","querySelector","unsaved","Object","keys","forEach","setItem","display","alert","module","SupabaseSaveMovie","SupabaseUnsaveMovie","ss","href","RatingStars","replace","SupabaseFavorite","ratings","stringify","select","favorites","res"],"sourceRoot":""}