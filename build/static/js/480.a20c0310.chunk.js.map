{"version":3,"file":"static/js/480.a20c0310.chunk.js","mappings":"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","sources":["supas/supabaseRate.js","components/Star.js","components/RatingStars.js","components/renderFavoritePoster.js","supas/fetchAll.js","components/renderFavoritePosters.js","pages/favorite.js","supas/fetchGlobalRatings.js","supas/supabaseFavorite.js"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst SUPABASE_KEY =\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt6eWxud3Fib2FiZnhpZmpzZXZpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTY3NDYzNjI0MiwiZXhwIjoxOTkwMjEyMjQyfQ.9YzPtaUZzqkGKve6PI5MtH_otfv1jh521NugK9dqyis\";\r\nconst supabaseUrl = \"https://kzylnwqboabfxifjsevi.supabase.co\";\r\n\r\nexport async function supabaseRate(user, id, index) {\r\n    const supabase = createClient(supabaseUrl, SUPABASE_KEY);\r\n    if (!index || !user || !id) {\r\n        return \"user and index must be valid for RATING...!!!\";\r\n    }\r\n    const { data, error } = await supabase\r\n        .from(\"Favorite movies\")\r\n        .update({ rating: index })\r\n        .eq(\"user_id\", user)\r\n        .eq(\"movie_id\", id);\r\n\r\n    if (!error) {\r\n        console.log(data);\r\n        return true\r\n    } else {\r\n        console.log(\r\n            error.message,\r\n            \"Unable to rate this. who the fuck are you.\"\r\n        );\r\n        return false;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { supabaseRate } from \"../supas/supabaseRate\";\r\nimport fetchGlobalRatings from \"../supas/fetchGlobalRatings\";\r\nconst Star = (props) => {\r\n    const changeGrade = async (e) => {\r\n        if (!props.userId) {\r\n            console.log(props.userId, \"user wasnt logged in!@@@\");\r\n            props.setMustLoginModal(true);\r\n        } else {\r\n            props.changeGrade(e.target.value);\r\n            const s = await supabaseRate(\r\n                props.userId,\r\n                props.id,\r\n                parseInt(e.target.value)\r\n            );\r\n            console.log(fetchGlobalRatings, s);\r\n            const r = fetchGlobalRatings(props.userId);\r\n\r\n            console.log(e.target.value, s, \"STAR\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <label className=\"star\">\r\n            <input\r\n                onClick={changeGrade}\r\n                type=\"radio\"\r\n                name=\"rating\"\r\n                id={props.grade}\r\n                value={props.index}\r\n                className=\"stars_radio-input\"\r\n            />\r\n            <svg\r\n                width=\"30\"\r\n                height=\"30\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"#fce500\"\r\n                strokeWidth=\"1\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                style={props.style}\r\n            >\r\n                <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon>\r\n            </svg>\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Star;\r\n","import React from \"react\";\r\nimport Star from \"./Star\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction RatingStars(props) {\r\n    const GRADES = [\"Poor\", \"Fair\", \"Good\", \"Very good\", \"Excellent\"];\r\n    const [gradeIndex, setGradeIndex] = useState();\r\n    const changeGradeIndex = (index) => {\r\n        setGradeIndex(index);\r\n    };\r\n    const activeStar = {\r\n        fill: \"#fce500\",\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (props.rating) {\r\n            console.log(\"set gradeindex now\");\r\n            setGradeIndex(props.rating);\r\n        }\r\n    }, [props.rating]);\r\n    useEffect(() => {\r\n        console.log(gradeIndex);\r\n    }, [gradeIndex]);\r\n    return (\r\n        <div className=\"stars\">\r\n            {GRADES.map((grade, index) => (\r\n                <Star\r\n                    // fetchGlobalRatings={props.fetchGlobalRatings}\r\n                    index={index}\r\n                    key={grade}\r\n                    style={gradeIndex >= index ? activeStar : {}}\r\n                    changeGrade={changeGradeIndex}\r\n                    userId={props.userId}\r\n                    id={props.id}\r\n                    saved={props.saved}\r\n                    setMustLoginModal={props.setMustLoginModal}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nexport default RatingStars;\r\n","import React from \"react\";\r\nimport RatingStars from \"./RatingStars\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function RenderFavoritePoster({ movie, ratings, userId }) {\r\n    return (\r\n        <>\r\n            <div className=\"favoriteItem\" key={movie.imdbID}>\r\n                <img src={movie.Poster} alt=\".\" />\r\n                <div className=\"favoriteItemDetails\">\r\n                    <span className=\"favoriteItemTitle\">\r\n                        <h1 className=\"text-xl font-medium flex w-4/5 h-full items-center justify-between\">\r\n                            <Link\r\n                                className=\"hover:text-yellow-400\"\r\n                                to={\"/movie\"}\r\n                                state={{ id: movie.imdbID }}\r\n                            >\r\n                                {movie.Title} ({movie.Released})\r\n                            </Link>\r\n                        </h1>\r\n                        <a\r\n                            className=\"text-xl hover:text-yellow-300\"\r\n                            href={`https://www.imdb.com/title/${movie.imdbID}/`}\r\n                        >\r\n                            {movie.imdbRating}/10\r\n                        </a>\r\n                    </span>\r\n                    <span className=\"favoriteItemTitle2 w-full text-sm\">\r\n                        {movie.Rated} | {movie.Genre} | {movie.Runtime}\r\n                    </span>\r\n                    <div className=\"favoriteItemDetail w-full px-2 mt-3\">\r\n                        <h1 className=\"font-normal text-m line-clamp-3\">\r\n                            {movie.Plot}\r\n                        </h1>\r\n                        <span className=\"flex flex-col justify-evenly w-full ml-0 mt-1 text-sm h-16\">\r\n                            <h1>Director: {movie.Director}</h1>\r\n                            <h1>Writer: {movie.Writer}</h1>\r\n                            <h1>Actors: {movie.Actors}</h1>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"flex w-full h-1/6 items-center px-2\" id=\"favoritePostersRating\">\r\n                        <h1>Rate this movie : </h1>\r\n                        <RatingStars\r\n                            userId={userId}\r\n                            id={movie.imdbID}\r\n                            rating={ratings[movie.imdbID]}\r\n                        ></RatingStars>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\nasync function fetchAll(s) {\r\n    if (s.length <= 0) {\r\n        return false;\r\n    }\r\n    var respo = [];\r\n    Object.keys(s).forEach(async (id) => {\r\n        const options = {\r\n            method: \"GET\",\r\n            url: `https://www.omdbapi.com/?apikey=c7326058&&i=${id}&plot=full`,\r\n        };\r\n        await axios\r\n            .request(options)\r\n            .then(function (response) {\r\n                console.log(\"this is fetchall\", response.data);\r\n                respo.push(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.error(\"fetchall err\", error);\r\n            });\r\n    });\r\n    return respo;\r\n}\r\nexport default fetchAll;\r\n","import { React, useEffect, useState } from \"react\";\r\nimport RenderFavoritePoster from \"./renderFavoritePoster\";\r\nimport fetchAll from \"../supas/fetchAll\";\r\n\r\nfunction RenderFavoritePosters(props) {\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const [faves, setFaves] = useState([]);\r\n    const [ratings, setRatings] = useState(\r\n        JSON.parse(localStorage.getItem(\"ratings\"))\r\n    );\r\n    const fetch = async () => {\r\n        if (ratings) {\r\n            var fetched = await fetchAll(ratings);\r\n            console.log(fetched.length, \"fetched\");\r\n            var fet = fetched.sort(\r\n                (a, b) => parseInt(a.Year) + parseInt(b.Year)\r\n            );\r\n            setFaves(fet);\r\n            console.log(fet);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (ratings) {\r\n            fetch();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"favorite\">\r\n            {faves &&\r\n                faves.length > 0 &&\r\n                faves.map((item) => {\r\n                    return (\r\n                        <RenderFavoritePoster\r\n                            movie={item}\r\n                            ratings={ratings}\r\n                            userId={userId}\r\n                        ></RenderFavoritePoster>\r\n                    );\r\n                })}\r\n        </div>\r\n    );\r\n}\r\nexport default RenderFavoritePosters;\r\n","import { lazy, React, Suspense, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RenderFavoritePosters from \"../components/renderFavoritePosters\";\r\n\r\nfunction Favorite() {\r\n    const userId = localStorage.getItem(\"userId\");\r\n    var [username, setUsername] = useState(\"\");\r\n    const [ratings, setRatings] = useState([]);\r\n\r\n    useEffect(() => {\r\n        userId\r\n            ? console.log(userId, \"user has signed in\")\r\n            : console.log(userId, \"user has not signed in!!!\");\r\n        console.log(username);\r\n        fetchName();\r\n    }, []);\r\n\r\n    const fetchName = async () => {\r\n        import(\"../supas/supabaseUsername\").then(async (module) => {\r\n            await module.SupabaseUsername(userId, setUsername);\r\n        });\r\n    };\r\n\r\n    return (\r\n            <div id=\"contFavorites\">\r\n                <div id=\"contFavorite\">\r\n                    <span className=\"relative h-12 w-full flex items-center justify-center bg-yellow-400/80 text-black tracking-widest font-bold\">\r\n                        <Link to={\"/\"} className=\"absolute left-2\">\r\n                            {\"< HOME\"}\r\n                        </Link>\r\n                        <h1>{username}'s watchlist</h1>\r\n                    </span>\r\n                    <RenderFavoritePosters\r\n                        ratings={ratings}\r\n                    ></RenderFavoritePosters>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\nexport default Favorite;\r\n","import { SupabaseFavorite } from \"./supabaseFavorite\";\r\n\r\nexport default async function fetchGlobalRatings(id) {\r\n    const ratings = await SupabaseFavorite(id);\r\n    if (ratings) {\r\n        localStorage.setItem(\"ratings\", JSON.stringify(ratings));\r\n    }\r\n}\r\n","import { createClient } from \"@supabase/supabase-js\";\r\n// const SUPABASE_KEY =\r\n//     \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt6eWxud3Fib2FiZnhpZmpzZXZpIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NzQ2MzYyNDIsImV4cCI6MTk5MDIxMjI0Mn0.wq8gqnIkU8ghAZcqxxHclJouLZDAGUPpVkei95W_1Hc\";\r\n//admin key\r\nconst SUPABASE_KEY =\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt6eWxud3Fib2FiZnhpZmpzZXZpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTY3NDYzNjI0MiwiZXhwIjoxOTkwMjEyMjQyfQ.9YzPtaUZzqkGKve6PI5MtH_otfv1jh521NugK9dqyis\";\r\nconst supabaseUrl = \"https://kzylnwqboabfxifjsevi.supabase.co\";\r\n// const supabaseKey = process.env.SUPABASE_KEY;\r\n\r\nexport async function SupabaseFavorite(id) {\r\n    const supabase = createClient(supabaseUrl, SUPABASE_KEY);\r\n    if (!id) {\r\n        return false;\r\n    }\r\n    let { data: favorites, error } = await supabase\r\n        .from(\"Favorite movies\")\r\n        .select(\"movie_id,rating\")\r\n        .eq(\"user_id\", id);\r\n    if (!error) {\r\n        if (favorites.length === 0) {\r\n            return false;\r\n        } else {\r\n            var res = {};\r\n            favorites.map((x) => {\r\n                res[x[\"movie_id\"]] = x[\"rating\"];\r\n            });\r\n            console.log(res);\r\n            return res;\r\n        }\r\n    } else {\r\n        console.log(error, \"cant get user favorites\");\r\n        return false;\r\n    }\r\n}\r\n"],"names":["SUPABASE_KEY","supabaseUrl","supabaseRate","user","id","index","supabase","createClient","from","update","rating","eq","data","error","console","log","message","props","changeGrade","e","userId","setMustLoginModal","target","value","parseInt","s","fetchGlobalRatings","className","onClick","type","name","grade","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","style","points","useState","gradeIndex","setGradeIndex","changeGradeIndex","activeStar","useEffect","map","saved","RenderFavoritePoster","movie","ratings","src","Poster","alt","to","state","imdbID","Title","Released","href","imdbRating","Rated","Genre","Runtime","Plot","Director","Writer","Actors","RatingStars","length","respo","Object","keys","forEach","options","method","url","axios","then","response","push","catch","localStorage","getItem","faves","setFaves","JSON","parse","fetch","fetchAll","fetched","fet","sort","a","b","Year","item","username","setUsername","fetchName","module","SupabaseUsername","SupabaseFavorite","setItem","stringify","select","favorites","res","x"],"sourceRoot":""}