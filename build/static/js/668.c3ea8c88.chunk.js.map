{"version":3,"file":"static/js/668.c3ea8c88.chunk.js","mappings":"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","sources":["supas/supabase.js","supas/supabaseInsert.js","pages/memes.js"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\r\n// const SUPABASE_KEY =\r\n//     \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt6eWxud3Fib2FiZnhpZmpzZXZpIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NzQ2MzYyNDIsImV4cCI6MTk5MDIxMjI0Mn0.wq8gqnIkU8ghAZcqxxHclJouLZDAGUPpVkei95W_1Hc\";\r\n//admin key\r\n\r\n// const SUPABASE_KEY = process.env.REACT_APP_Supabase_key;\r\nconst SUPABASE_KEY =\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt6eWxud3Fib2FiZnhpZmpzZXZpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTY3NDYzNjI0MiwiZXhwIjoxOTkwMjEyMjQyfQ.9YzPtaUZzqkGKve6PI5MtH_otfv1jh521NugK9dqyis\";\r\nconst supabaseUrl = \"https://kzylnwqboabfxifjsevi.supabase.co\";\r\n// const supabaseKey = process.env.SUPABASE_KEY;\r\n\r\nexport async function Supabase(userID) {\r\n    const supabase = createClient(supabaseUrl, SUPABASE_KEY);\r\n    if (!userID) {\r\n        return false;\r\n    }\r\n\r\n    let { data: memes, error } = await supabase\r\n        .from(\"memes\")\r\n        .select(\"*\")\r\n        .eq(\"user_id\", userID);\r\n    if (!error) {\r\n        console.log(memes);\r\n        return memes;\r\n    }\r\n}\r\n","import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst SUPABASE_KEY =\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt6eWxud3Fib2FiZnhpZmpzZXZpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTY3NDYzNjI0MiwiZXhwIjoxOTkwMjEyMjQyfQ.9YzPtaUZzqkGKve6PI5MtH_otfv1jh521NugK9dqyis\";\r\nconst supabaseUrl = \"https://kzylnwqboabfxifjsevi.supabase.co\";\r\n\r\nexport async function SupabaseInsert(id, x) {\r\n    const supabase = createClient(supabaseUrl, SUPABASE_KEY);\r\n    if (!x || !id) {\r\n        return \"link and id must be valid...!!!\";\r\n    }\r\n    const { data, error } = await supabase.from(\"memes\").insert([{user_id: id, link: x }]);\r\n\r\n    if (!error) {\r\n        console.log(data, \"Successfully saved this meme...\");\r\n        return true;\r\n    } else {\r\n        console.log(\r\n            error.message,\r\n            \"Unable to save this meme. It might already exist.\"\r\n        );\r\n        return false;\r\n    }\r\n}\r\n","import axios from \"axios\";\r\nimport { React, useState, useEffect } from \"react\";\r\nimport {  Link } from \"react-router-dom\";\r\nimport { Supabase } from \"../supas/supabase\";\r\nimport { SupabaseInsert } from \"../supas/supabaseInsert\";\r\nimport Modal from \"react-modal\";\r\n\r\nfunction Memes() {\r\n    //  const location = useLocation();\r\n    //  const { id } = location.state;\r\n    //  console.log(id)\r\n    const [modalState, setModalState] = useState(false);\r\n    const [memes, setMemes] = useState([]);\r\n    const [counter, setCounter] = useState(1);\r\n    const [currentImage, setCurrentImage] = useState(memes[counter]);\r\n    const [saved, setSaved] = useState([]);\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    const [mustLoginModal, setMustLoginModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userId\r\n            ? console.log(userId, \"user has signed in\")\r\n            : console.log(userId, \"user has not signed in!!!\");\r\n        Supabase(userId);\r\n        search();\r\n    }, [userId]);\r\n\r\n    const search = async () => {\r\n        await axios\r\n            .get(`https://movie-backend-8isc.onrender.com/api/v1/memes`)\r\n            .then((response) => {\r\n                var cat = response.data.category;\r\n                var res = [];\r\n                cat.forEach((x) => {\r\n                    res.push(x.image);\r\n                });\r\n                // setMemes(res)\r\n                setMemes(memes.concat(res));\r\n                console.log(\"RESPONSE IRSEN SHUUUUU!!!!\", res);\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Гарсан алдаа______\", error);\r\n            });\r\n    };\r\n    // useEffect(() => {\r\n    //     search();\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        if (counter !== 0 && counter === memes.length) {\r\n            search();\r\n            // setCounter(counter + 1)\r\n        } else {\r\n            setCurrentImage(memes[counter]);\r\n        }\r\n        console.log(memes);\r\n    }, [counter, memes]);\r\n\r\n    const saveMeme = async (x) => {\r\n        if (!userId) {\r\n            // alert(\"You must login to use this feature...\");\r\n            setMustLoginModal(true);\r\n            return false;\r\n        }\r\n        const alerts = document.getElementById(\"memeSaved\");\r\n        // const Meme = document.getElementById(\"meme\");\r\n        const saved = await SupabaseInsert(userId, x);\r\n        console.log(saved);\r\n        if (saved) {\r\n            alerts.style.display = \"flex\";\r\n            setTimeout(() => {\r\n                alerts.style.display = \"none\";\r\n            }, 2000);\r\n        } else {\r\n            alerts.style.display = \"flex\";\r\n            alerts.style.backgroundColor = \"#dc143c90\";\r\n            alerts.innerHTML = \"This meme can not be saved...\";\r\n            setTimeout(() => {\r\n                alerts.style.display = \"none\";\r\n                alerts.style.backgroundColor = \"#86fba590\";\r\n                alerts.innerHTML = \"Successfully saved this meme...\";\r\n            }, 2000);\r\n        }\r\n    };\r\n    const savedMemes = async () => {\r\n        if (!userId) {\r\n            // alert(\"You must login to use this feature...\");\r\n            setMustLoginModal(true);\r\n            return false;\r\n        }\r\n        setModalState(true);\r\n        const saved = await Supabase(userId);\r\n        var tempSaved = [];\r\n        saved.map((x) => {\r\n            tempSaved.push([x[\"created_at\"].slice(0, 19), x[\"link\"]]);\r\n            return true\r\n        });\r\n        setSaved(tempSaved);\r\n        console.log(tempSaved);\r\n    };\r\n\r\n    return (\r\n        <div id=\"contMemes\">\r\n            <div id=\"memes\">\r\n                <div id=\"meme\">\r\n                    <img draggable={false} src={currentImage} alt=\"\" />\r\n                    <div id=\"memeSaved\">Successfully saved this meme...</div>\r\n                </div>\r\n                <div id=\"memeButtons\">\r\n                    <div id=\"topButtons\">\r\n                        <Link to={\"/\"} id=\"memeLink\" class=\"buttonClass\">\r\n                            Go Back to Home\r\n                        </Link>\r\n                        <button\r\n                            class=\"buttonClass\"\r\n                            onClick={() => savedMemes()}\r\n                        >\r\n                            Saved memes\r\n                        </button>\r\n\r\n                        <button\r\n                            class=\"buttonClass\"\r\n                            onClick={() => saveMeme(currentImage)}\r\n                        >\r\n                            Save...\r\n                        </button>\r\n                    </div>\r\n                    <div id=\"changeMeme\">\r\n                        <button\r\n                            class=\"buttonClass2\"\r\n                            onClick={() => {\r\n                                setCounter(counter - 1);\r\n                                var alert =\r\n                                    document.getElementById(\"memeSaved\");\r\n                                alert.style.display = \"none\";\r\n                                alert.style.backgroundColor = \"#86fba590\";\r\n                                alert.innerHTML =\r\n                                    \"Successfully saved this meme...\";\r\n                            }}\r\n                        >\r\n                            Last\r\n                        </button>\r\n                        <button\r\n                            class=\"buttonClass2\"\r\n                            onClick={() => {\r\n                                setCounter(counter + 1);\r\n                                var alert =\r\n                                    document.getElementById(\"memeSaved\");\r\n                                alert.style.display = \"none\";\r\n                                alert.style.backgroundColor = \"#86fba590\";\r\n                                alert.innerHTML =\r\n                                    \"Successfully saved this meme...\";\r\n                            }}\r\n                        >\r\n                            Next\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                id=\"modal\"\r\n                style={customStyles}\r\n                isOpen={modalState}\r\n                onRequestClose={() => setModalState(false)}\r\n                contentLabel=\"Example Modal\"\r\n                ariaHideApp={false}\r\n                shouldCloseOnOverlayClick={true}\r\n            >\r\n                <div style={customStyles.container}>\r\n                    <div\r\n                        id=\"exitIcon\"\r\n                        onClick={() => setModalState(false)}\r\n                    ></div>\r\n\r\n                    <h1 id=\"exitModal\">\r\n                        these are memes that was found on the side of the road.\r\n                    </h1>\r\n                    <div id=\"grid\">\r\n                        {saved.map((x) => {\r\n                            return (\r\n                                <div style={customStyles.imageDiv}>\r\n                                    <img\r\n                                        style={customStyles.image}\r\n                                        src={x[1]}\r\n                                        key={x[0]}\r\n                                        alt={x[0]}\r\n                                    ></img>\r\n                                    <h1 style={customStyles.date}>\r\n                                        Saved at: {x[0]}\r\n                                    </h1>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                id=\"mustLoginModal\"\r\n                isOpen={mustLoginModal}\r\n                onRequestClose={() => setMustLoginModal(false)}\r\n                ariaHideApp={false}\r\n                shouldCloseOnOverlayClick={true}\r\n            >\r\n                <div id=\"mustLoginCont\">\r\n                    <h4 className=\"py-2 text-xl font-extrabold\">\r\n                        You must login to use this feature!\r\n                    </h4>\r\n                    <div id=\"mustLoginButtons\">\r\n                        <Link\r\n                            id=\"mustLoginButton\"\r\n                            onClick={() => {\r\n                                setMustLoginModal(false);\r\n                            }}\r\n                            className=\"bg-green-500\"\r\n                            to={\"/\"}\r\n                        >\r\n                            Login Now\r\n                        </Link>\r\n                        <input\r\n                            id=\"mustLoginButton\"\r\n                            type=\"button\"\r\n                            value=\"Close\"\r\n                            onClick={() => setMustLoginModal(false)}\r\n                            className=\"bg-red-600\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        // backgroundColor: \"\"\r\n    },\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"fit-content\",\r\n        position: \"relative\",\r\n    },\r\n    imageDiv: {\r\n        width: \"100%\",\r\n        height: \"fit-content\",\r\n        position: \"relative\",\r\n    },\r\n    image: {\r\n        width: \"100%\",\r\n        // height: \"100%\",\r\n        height: \"28rem\",\r\n    },\r\n    date: {\r\n        width: \"100%\",\r\n        height: \"2rem\",\r\n        // position: \"absolute\",\r\n        // bottom: \"0px\",\r\n        backgroundColor: \"white\",\r\n    },\r\n};\r\n\r\nexport default Memes;\r\n"],"names":["SUPABASE_KEY","supabaseUrl","Supabase","userID","supabase","createClient","from","select","eq","memes","data","error","console","log","SupabaseInsert","id","x","insert","user_id","link","message","customStyles","content","top","left","right","bottom","marginRight","transform","container","width","height","position","imageDiv","image","date","backgroundColor","useState","modalState","setModalState","setMemes","counter","setCounter","currentImage","setCurrentImage","saved","setSaved","userId","localStorage","getItem","mustLoginModal","setMustLoginModal","useEffect","search","axios","then","response","cat","category","res","forEach","push","concat","catch","length","saveMeme","alerts","document","getElementById","style","display","setTimeout","innerHTML","savedMemes","tempSaved","map","slice","draggable","src","alt","to","class","onClick","alert","isOpen","onRequestClose","contentLabel","ariaHideApp","shouldCloseOnOverlayClick","className","type","value"],"sourceRoot":""}